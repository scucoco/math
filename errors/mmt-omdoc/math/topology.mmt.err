<errors>
<error target="parser" sref="http://docs.omdoc.org/latin/math/topology.mmt#184.6.34:185.6.35" type="info.kwarc.mmt.api.SourceError" shortMsg="unbound token: OO" level="2">
  source error (parser) at http://docs.omdoc.org/latin/math/topology.mmt#184.6.34:185.6.35
  <stacktrace>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeError(NotationBasedParser.scala:44)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:224)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:391)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18$$anonfun$apply$14.apply(NotationBasedParser.scala:277)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18$$anonfun$apply$14.apply(NotationBasedParser.scala:277)</element>
    <element>scala.collection.immutable.List.map(List.scala:273)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:277)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.logGroup(NotationBasedParser.scala:25)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.apply(NotationBasedParser.scala:128)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.puCont(StructureParser.scala:100)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readParsedObject(StructureParser.scala:238)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.doComponent(StructureParser.scala:243)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readConstant(StructureParser.scala:459)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInModule(StructureParser.scala:750)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply$mcV$sp(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readTheory(StructureParser.scala:341)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInDocument(StructureParser.scala:610)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply$mcV$sp(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:136)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:128)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:44)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error target="parser" sref="http://docs.omdoc.org/latin/math/topology.mmt#190.6.40:190.6.40" type="info.kwarc.mmt.api.SourceError" shortMsg="unbound token: ⋂" level="2">
  source error (parser) at http://docs.omdoc.org/latin/math/topology.mmt#190.6.40:190.6.40
  <stacktrace>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeError(NotationBasedParser.scala:44)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:224)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>scala.collection.immutable.List.map(List.scala:273)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18$$anonfun$apply$14.apply(NotationBasedParser.scala:277)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18$$anonfun$apply$14.apply(NotationBasedParser.scala:277)</element>
    <element>scala.collection.immutable.List.map(List.scala:277)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:277)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.logGroup(NotationBasedParser.scala:25)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.apply(NotationBasedParser.scala:128)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.puCont(StructureParser.scala:100)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readParsedObject(StructureParser.scala:238)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.doComponent(StructureParser.scala:243)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readConstant(StructureParser.scala:459)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInModule(StructureParser.scala:750)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply$mcV$sp(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readTheory(StructureParser.scala:341)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInDocument(StructureParser.scala:610)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply$mcV$sp(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:136)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:128)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:44)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error target="parser" sref="http://docs.omdoc.org/latin/math/topology.mmt#198.6.48:199.6.49" type="info.kwarc.mmt.api.SourceError" shortMsg="unbound token: OO" level="2">
  source error (parser) at http://docs.omdoc.org/latin/math/topology.mmt#198.6.48:199.6.49
  <stacktrace>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeError(NotationBasedParser.scala:44)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:224)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:391)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18$$anonfun$apply$14.apply(NotationBasedParser.scala:277)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18$$anonfun$apply$14.apply(NotationBasedParser.scala:277)</element>
    <element>scala.collection.immutable.List.map(List.scala:277)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:277)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.logGroup(NotationBasedParser.scala:25)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.apply(NotationBasedParser.scala:128)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.puCont(StructureParser.scala:100)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readParsedObject(StructureParser.scala:238)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.doComponent(StructureParser.scala:243)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readConstant(StructureParser.scala:459)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInModule(StructureParser.scala:750)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply$mcV$sp(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readTheory(StructureParser.scala:341)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInDocument(StructureParser.scala:610)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply$mcV$sp(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:136)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:128)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:44)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error target="parser" sref="http://docs.omdoc.org/latin/math/topology.mmt#240.8.22:243.8.25" type="info.kwarc.mmt.api.SourceError" shortMsg="unbound token: full" level="2">
  source error (parser) at http://docs.omdoc.org/latin/math/topology.mmt#240.8.22:243.8.25
  <stacktrace>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeError(NotationBasedParser.scala:44)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:224)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>scala.collection.immutable.List.map(List.scala:273)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.logGroup(NotationBasedParser.scala:25)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.apply(NotationBasedParser.scala:128)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.puCont(StructureParser.scala:100)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readParsedObject(StructureParser.scala:238)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.doComponent(StructureParser.scala:243)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readConstant(StructureParser.scala:459)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInModule(StructureParser.scala:750)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply$mcV$sp(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readTheory(StructureParser.scala:341)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInDocument(StructureParser.scala:610)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply$mcV$sp(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:136)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:128)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:44)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error target="parser" sref="http://docs.omdoc.org/latin/math/topology.mmt#251.8.33:252.8.34" type="info.kwarc.mmt.api.SourceError" shortMsg="unbound token: CC" level="2">
  source error (parser) at http://docs.omdoc.org/latin/math/topology.mmt#251.8.33:252.8.34
  <stacktrace>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeError(NotationBasedParser.scala:44)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:224)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:391)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.logGroup(NotationBasedParser.scala:25)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.apply(NotationBasedParser.scala:128)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.puCont(StructureParser.scala:100)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readParsedObject(StructureParser.scala:238)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.doComponent(StructureParser.scala:243)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readConstant(StructureParser.scala:459)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInModule(StructureParser.scala:750)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply$mcV$sp(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readTheory(StructureParser.scala:341)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInDocument(StructureParser.scala:610)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply$mcV$sp(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:136)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:128)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:44)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error target="parser" sref="http://docs.omdoc.org/latin/math/topology.mmt#381.13.21:381.13.21" type="info.kwarc.mmt.api.SourceError" shortMsg="unbound token: ∅" level="2">
  source error (parser) at http://docs.omdoc.org/latin/math/topology.mmt#381.13.21:381.13.21
  <stacktrace>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeError(NotationBasedParser.scala:44)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:224)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:391)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.logGroup(NotationBasedParser.scala:25)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.apply(NotationBasedParser.scala:128)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.puCont(StructureParser.scala:100)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readParsedObject(StructureParser.scala:238)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.doComponent(StructureParser.scala:243)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readConstant(StructureParser.scala:459)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInModule(StructureParser.scala:750)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply$mcV$sp(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readTheory(StructureParser.scala:341)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInDocument(StructureParser.scala:610)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply$mcV$sp(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:136)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:128)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:44)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error target="parser" sref="http://docs.omdoc.org/latin/math/topology.mmt#386.13.26:387.13.27" type="info.kwarc.mmt.api.SourceError" shortMsg="unbound token: CC" level="2">
  source error (parser) at http://docs.omdoc.org/latin/math/topology.mmt#386.13.26:387.13.27
  <stacktrace>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeError(NotationBasedParser.scala:44)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:224)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:391)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.logGroup(NotationBasedParser.scala:25)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.apply(NotationBasedParser.scala:128)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.puCont(StructureParser.scala:100)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readParsedObject(StructureParser.scala:238)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.doComponent(StructureParser.scala:243)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readConstant(StructureParser.scala:459)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInModule(StructureParser.scala:750)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply$mcV$sp(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readTheory(StructureParser.scala:341)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInDocument(StructureParser.scala:610)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply$mcV$sp(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:136)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:128)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:44)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error target="parser" sref="http://docs.omdoc.org/latin/math/topology.mmt#422.14.32:423.14.33" type="info.kwarc.mmt.api.SourceError" shortMsg="unbound token: CC" level="2">
  source error (parser) at http://docs.omdoc.org/latin/math/topology.mmt#422.14.32:423.14.33
  <stacktrace>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeError(NotationBasedParser.scala:44)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:224)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:391)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18$$anonfun$apply$14.apply(NotationBasedParser.scala:277)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18$$anonfun$apply$14.apply(NotationBasedParser.scala:277)</element>
    <element>scala.collection.immutable.List.map(List.scala:273)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:277)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.logGroup(NotationBasedParser.scala:25)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.apply(NotationBasedParser.scala:128)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.puCont(StructureParser.scala:100)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readParsedObject(StructureParser.scala:238)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.doComponent(StructureParser.scala:243)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readConstant(StructureParser.scala:459)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInModule(StructureParser.scala:750)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply$mcV$sp(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readTheory(StructureParser.scala:341)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInDocument(StructureParser.scala:610)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply$mcV$sp(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:136)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:128)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:44)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error target="parser" sref="http://docs.omdoc.org/latin/math/topology.mmt#436.14.46:437.14.47" type="info.kwarc.mmt.api.SourceError" shortMsg="unbound token: CC" level="2">
  source error (parser) at http://docs.omdoc.org/latin/math/topology.mmt#436.14.46:437.14.47
  <stacktrace>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeError(NotationBasedParser.scala:44)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:224)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:391)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18$$anonfun$apply$14.apply(NotationBasedParser.scala:277)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18$$anonfun$apply$14.apply(NotationBasedParser.scala:277)</element>
    <element>scala.collection.immutable.List.map(List.scala:277)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:277)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.logGroup(NotationBasedParser.scala:25)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.apply(NotationBasedParser.scala:128)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.puCont(StructureParser.scala:100)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readParsedObject(StructureParser.scala:238)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.doComponent(StructureParser.scala:243)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readConstant(StructureParser.scala:459)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInModule(StructureParser.scala:750)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply$mcV$sp(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readTheory(StructureParser.scala:341)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInDocument(StructureParser.scala:610)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply$mcV$sp(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:136)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:128)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:44)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error target="parser" sref="http://docs.omdoc.org/latin/math/topology.mmt#447.14.57:447.14.57" type="info.kwarc.mmt.api.SourceError" shortMsg="unbound token: ∪" level="2">
  source error (parser) at http://docs.omdoc.org/latin/math/topology.mmt#447.14.57:447.14.57
  <stacktrace>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeError(NotationBasedParser.scala:44)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:224)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>scala.collection.immutable.List.map(List.scala:277)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18$$anonfun$apply$14.apply(NotationBasedParser.scala:277)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18$$anonfun$apply$14.apply(NotationBasedParser.scala:277)</element>
    <element>scala.collection.immutable.List.map(List.scala:277)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:277)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.logGroup(NotationBasedParser.scala:25)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.apply(NotationBasedParser.scala:128)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.puCont(StructureParser.scala:100)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readParsedObject(StructureParser.scala:238)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.doComponent(StructureParser.scala:243)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readConstant(StructureParser.scala:459)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInModule(StructureParser.scala:750)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply$mcV$sp(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readTheory(StructureParser.scala:341)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInDocument(StructureParser.scala:610)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply$mcV$sp(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:136)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:128)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:44)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error target="parser" sref="http://docs.omdoc.org/latin/math/topology.mmt#454.14.64:455.14.65" type="info.kwarc.mmt.api.SourceError" shortMsg="unbound token: CC" level="2">
  source error (parser) at http://docs.omdoc.org/latin/math/topology.mmt#454.14.64:455.14.65
  <stacktrace>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeError(NotationBasedParser.scala:44)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:224)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:391)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18$$anonfun$apply$14.apply(NotationBasedParser.scala:277)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18$$anonfun$apply$14.apply(NotationBasedParser.scala:277)</element>
    <element>scala.collection.immutable.List.map(List.scala:277)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:277)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.logGroup(NotationBasedParser.scala:25)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.apply(NotationBasedParser.scala:128)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.puCont(StructureParser.scala:100)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readParsedObject(StructureParser.scala:238)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.doComponent(StructureParser.scala:243)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readConstant(StructureParser.scala:459)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInModule(StructureParser.scala:750)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply$mcV$sp(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readTheory(StructureParser.scala:341)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInDocument(StructureParser.scala:610)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply$mcV$sp(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:136)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:128)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:44)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error target="parser" sref="http://docs.omdoc.org/latin/math/topology.mmt#650.22.34:650.22.34" type="info.kwarc.mmt.api.SourceError" shortMsg="unbound token: ⇒" level="2">
  source error (parser) at http://docs.omdoc.org/latin/math/topology.mmt#650.22.34:650.22.34
  <stacktrace>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeError(NotationBasedParser.scala:44)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:224)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>scala.collection.immutable.List.map(List.scala:277)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.logGroup(NotationBasedParser.scala:25)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.apply(NotationBasedParser.scala:128)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.puCont(StructureParser.scala:100)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readParsedObject(StructureParser.scala:238)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.doComponent(StructureParser.scala:243)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readConstant(StructureParser.scala:459)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInModule(StructureParser.scala:750)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply$mcV$sp(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readTheory(StructureParser.scala:341)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInDocument(StructureParser.scala:610)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply$mcV$sp(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:136)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:128)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:44)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error target="parser" sref="http://docs.omdoc.org/latin/math/topology.mmt#701.23.35:701.23.35" type="info.kwarc.mmt.api.SourceError" shortMsg="unbound token: =" level="2">
  source error (parser) at http://docs.omdoc.org/latin/math/topology.mmt#701.23.35:701.23.35
  <stacktrace>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeError(NotationBasedParser.scala:44)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:224)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>scala.collection.immutable.List.map(List.scala:277)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.logGroup(NotationBasedParser.scala:25)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.apply(NotationBasedParser.scala:128)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.puCont(StructureParser.scala:100)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readParsedObject(StructureParser.scala:238)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.doComponent(StructureParser.scala:243)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readConstant(StructureParser.scala:459)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInModule(StructureParser.scala:750)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply$mcV$sp(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readTheory(StructureParser.scala:341)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInDocument(StructureParser.scala:610)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply$mcV$sp(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:136)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:128)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:44)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error target="parser" sref="http://docs.omdoc.org/latin/math/topology.mmt#702.23.36:702.23.36" type="info.kwarc.mmt.api.SourceError" shortMsg="unbound token: =" level="2">
  source error (parser) at http://docs.omdoc.org/latin/math/topology.mmt#702.23.36:702.23.36
  <stacktrace>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeError(NotationBasedParser.scala:44)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:224)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>scala.collection.immutable.List.map(List.scala:277)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.logGroup(NotationBasedParser.scala:25)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.apply(NotationBasedParser.scala:128)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.puCont(StructureParser.scala:100)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readParsedObject(StructureParser.scala:238)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.doComponent(StructureParser.scala:243)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readConstant(StructureParser.scala:459)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInModule(StructureParser.scala:750)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply$mcV$sp(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readTheory(StructureParser.scala:341)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInDocument(StructureParser.scala:610)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply$mcV$sp(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:136)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:128)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:44)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error target="parser" sref="http://docs.omdoc.org/latin/math/topology.mmt#850.29.33:850.29.33" type="info.kwarc.mmt.api.SourceError" shortMsg="unbound token: ∪" level="2">
  source error (parser) at http://docs.omdoc.org/latin/math/topology.mmt#850.29.33:850.29.33
  <stacktrace>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeError(NotationBasedParser.scala:44)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:224)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>scala.collection.immutable.List.map(List.scala:277)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>scala.collection.immutable.List.map(List.scala:277)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.logGroup(NotationBasedParser.scala:25)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.apply(NotationBasedParser.scala:128)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.puCont(StructureParser.scala:100)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readParsedObject(StructureParser.scala:238)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.doComponent(StructureParser.scala:243)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readConstant(StructureParser.scala:459)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInModule(StructureParser.scala:750)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply$mcV$sp(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readTheory(StructureParser.scala:341)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInDocument(StructureParser.scala:610)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply$mcV$sp(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:136)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:128)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:44)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error target="parser" sref="http://docs.omdoc.org/latin/math/topology.mmt#855.29.38:855.29.38" type="info.kwarc.mmt.api.SourceError" shortMsg="unbound token: =" level="2">
  source error (parser) at http://docs.omdoc.org/latin/math/topology.mmt#855.29.38:855.29.38
  <stacktrace>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeError(NotationBasedParser.scala:44)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:224)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>scala.collection.immutable.List.map(List.scala:277)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.logGroup(NotationBasedParser.scala:25)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.apply(NotationBasedParser.scala:128)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.puCont(StructureParser.scala:100)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readParsedObject(StructureParser.scala:238)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.doComponent(StructureParser.scala:243)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readConstant(StructureParser.scala:459)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInModule(StructureParser.scala:750)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply$mcV$sp(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readTheory(StructureParser.scala:341)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInDocument(StructureParser.scala:610)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply$mcV$sp(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:136)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:128)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:44)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error target="parser" sref="http://docs.omdoc.org/latin/math/topology.mmt#856.29.39:856.29.39" type="info.kwarc.mmt.api.SourceError" shortMsg="unbound token: =" level="2">
  source error (parser) at http://docs.omdoc.org/latin/math/topology.mmt#856.29.39:856.29.39
  <stacktrace>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeError(NotationBasedParser.scala:44)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:224)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>scala.collection.immutable.List.map(List.scala:277)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.logGroup(NotationBasedParser.scala:25)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.apply(NotationBasedParser.scala:128)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.puCont(StructureParser.scala:100)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readParsedObject(StructureParser.scala:238)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.doComponent(StructureParser.scala:243)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readConstant(StructureParser.scala:459)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInModule(StructureParser.scala:750)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply$mcV$sp(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readTheory(StructureParser.scala:341)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInDocument(StructureParser.scala:610)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply$mcV$sp(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:136)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:128)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:44)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error target="parser" sref="http://docs.omdoc.org/latin/math/topology.mmt#863.29.46:863.29.46" type="info.kwarc.mmt.api.SourceError" shortMsg="unbound token: ∪" level="2">
  source error (parser) at http://docs.omdoc.org/latin/math/topology.mmt#863.29.46:863.29.46
  <stacktrace>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeError(NotationBasedParser.scala:44)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:224)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>scala.collection.immutable.List.map(List.scala:277)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.logGroup(NotationBasedParser.scala:25)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.apply(NotationBasedParser.scala:128)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.puCont(StructureParser.scala:100)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readParsedObject(StructureParser.scala:238)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.doComponent(StructureParser.scala:243)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readConstant(StructureParser.scala:459)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInModule(StructureParser.scala:750)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply$mcV$sp(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readTheory(StructureParser.scala:341)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInDocument(StructureParser.scala:610)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply$mcV$sp(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:136)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:128)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:44)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error target="parser" sref="http://docs.omdoc.org/latin/math/topology.mmt#891.30.20:891.30.20" type="info.kwarc.mmt.api.SourceError" shortMsg="unbound token: ∅" level="2">
  source error (parser) at http://docs.omdoc.org/latin/math/topology.mmt#891.30.20:891.30.20
  <stacktrace>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeError(NotationBasedParser.scala:44)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:224)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>scala.collection.immutable.List.map(List.scala:277)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.logGroup(NotationBasedParser.scala:25)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.apply(NotationBasedParser.scala:128)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.puCont(StructureParser.scala:100)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readParsedObject(StructureParser.scala:238)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.doComponent(StructureParser.scala:243)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readConstant(StructureParser.scala:459)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInModule(StructureParser.scala:750)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply$mcV$sp(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readTheory(StructureParser.scala:341)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInDocument(StructureParser.scala:610)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply$mcV$sp(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:136)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:128)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:44)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error target="parser" sref="http://docs.omdoc.org/latin/math/topology.mmt#893.30.22:893.30.22" type="info.kwarc.mmt.api.SourceError" shortMsg="unbound token: =" level="2">
  source error (parser) at http://docs.omdoc.org/latin/math/topology.mmt#893.30.22:893.30.22
  <stacktrace>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeError(NotationBasedParser.scala:44)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:224)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>scala.collection.immutable.List.map(List.scala:277)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.logGroup(NotationBasedParser.scala:25)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.apply(NotationBasedParser.scala:128)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.puCont(StructureParser.scala:100)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readParsedObject(StructureParser.scala:238)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.doComponent(StructureParser.scala:243)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readConstant(StructureParser.scala:459)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInModule(StructureParser.scala:750)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply$mcV$sp(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readTheory(StructureParser.scala:341)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInDocument(StructureParser.scala:610)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply$mcV$sp(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:136)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:128)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:44)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error target="parser" sref="http://docs.omdoc.org/latin/math/topology.mmt#894.30.23:894.30.23" type="info.kwarc.mmt.api.SourceError" shortMsg="unbound token: =" level="2">
  source error (parser) at http://docs.omdoc.org/latin/math/topology.mmt#894.30.23:894.30.23
  <stacktrace>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeError(NotationBasedParser.scala:44)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:224)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>scala.collection.immutable.List.map(List.scala:277)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.logGroup(NotationBasedParser.scala:25)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.apply(NotationBasedParser.scala:128)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.puCont(StructureParser.scala:100)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readParsedObject(StructureParser.scala:238)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.doComponent(StructureParser.scala:243)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readConstant(StructureParser.scala:459)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInModule(StructureParser.scala:750)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply$mcV$sp(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readTheory(StructureParser.scala:341)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInDocument(StructureParser.scala:610)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply$mcV$sp(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:136)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:128)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:44)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error target="parser" sref="http://docs.omdoc.org/latin/math/topology.mmt#896.30.25:896.30.25" type="info.kwarc.mmt.api.SourceError" shortMsg="unbound token: ∅" level="2">
  source error (parser) at http://docs.omdoc.org/latin/math/topology.mmt#896.30.25:896.30.25
  <stacktrace>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeError(NotationBasedParser.scala:44)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:224)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>scala.collection.immutable.List.map(List.scala:277)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.logGroup(NotationBasedParser.scala:25)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.apply(NotationBasedParser.scala:128)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.puCont(StructureParser.scala:100)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readParsedObject(StructureParser.scala:238)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.doComponent(StructureParser.scala:243)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readConstant(StructureParser.scala:459)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInModule(StructureParser.scala:750)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply$mcV$sp(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readTheory(StructureParser.scala:341)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInDocument(StructureParser.scala:610)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply$mcV$sp(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:136)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:128)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:44)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error target="parser" sref="http://docs.omdoc.org/latin/math/topology.mmt#1136.40.34:1136.40.34" type="info.kwarc.mmt.api.SourceError" shortMsg="unbound token: ⇒" level="2">
  source error (parser) at http://docs.omdoc.org/latin/math/topology.mmt#1136.40.34:1136.40.34
  <stacktrace>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeError(NotationBasedParser.scala:44)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:224)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>scala.collection.immutable.List.map(List.scala:277)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.logGroup(NotationBasedParser.scala:25)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.apply(NotationBasedParser.scala:128)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.puCont(StructureParser.scala:100)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readParsedObject(StructureParser.scala:238)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.doComponent(StructureParser.scala:243)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readConstant(StructureParser.scala:459)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInModule(StructureParser.scala:750)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply$mcV$sp(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readTheory(StructureParser.scala:341)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInDocument(StructureParser.scala:610)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply$mcV$sp(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:136)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:128)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:44)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error target="parser" sref="http://docs.omdoc.org/latin/math/topology.mmt#1180.41.35:1180.41.35" type="info.kwarc.mmt.api.SourceError" shortMsg="unbound token: ⇒" level="2">
  source error (parser) at http://docs.omdoc.org/latin/math/topology.mmt#1180.41.35:1180.41.35
  <stacktrace>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeError(NotationBasedParser.scala:44)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:224)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>scala.collection.immutable.List.map(List.scala:277)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.logGroup(NotationBasedParser.scala:25)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.apply(NotationBasedParser.scala:128)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.puCont(StructureParser.scala:100)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readParsedObject(StructureParser.scala:238)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.doComponent(StructureParser.scala:243)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readConstant(StructureParser.scala:459)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInModule(StructureParser.scala:750)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply$mcV$sp(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readTheory(StructureParser.scala:341)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInDocument(StructureParser.scala:610)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply$mcV$sp(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:136)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:128)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:44)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error target="parser" sref="http://docs.omdoc.org/latin/math/topology.mmt#1189.41.44:1189.41.44" type="info.kwarc.mmt.api.SourceError" shortMsg="unbound token: ⇒" level="2">
  source error (parser) at http://docs.omdoc.org/latin/math/topology.mmt#1189.41.44:1189.41.44
  <stacktrace>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeError(NotationBasedParser.scala:44)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:224)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>scala.collection.immutable.List.map(List.scala:277)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.logGroup(NotationBasedParser.scala:25)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.apply(NotationBasedParser.scala:128)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.puCont(StructureParser.scala:100)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readParsedObject(StructureParser.scala:238)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.doComponent(StructureParser.scala:243)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readConstant(StructureParser.scala:459)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInModule(StructureParser.scala:750)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply$mcV$sp(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readTheory(StructureParser.scala:341)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInDocument(StructureParser.scala:610)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply$mcV$sp(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:136)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:128)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:44)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error target="parser" sref="http://docs.omdoc.org/latin/math/topology.mmt#1233.42.35:1233.42.35" type="info.kwarc.mmt.api.SourceError" shortMsg="unbound token: ⇒" level="2">
  source error (parser) at http://docs.omdoc.org/latin/math/topology.mmt#1233.42.35:1233.42.35
  <stacktrace>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeError(NotationBasedParser.scala:44)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:224)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>scala.collection.immutable.List.map(List.scala:277)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.logGroup(NotationBasedParser.scala:25)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.apply(NotationBasedParser.scala:128)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.puCont(StructureParser.scala:100)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readParsedObject(StructureParser.scala:238)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.doComponent(StructureParser.scala:243)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readConstant(StructureParser.scala:459)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInModule(StructureParser.scala:750)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply$mcV$sp(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readTheory(StructureParser.scala:341)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInDocument(StructureParser.scala:610)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply$mcV$sp(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:136)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:128)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:44)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error target="parser" sref="http://docs.omdoc.org/latin/math/topology.mmt#1236.42.38:1236.42.38" type="info.kwarc.mmt.api.SourceError" shortMsg="unbound token: ∀" level="2">
  source error (parser) at http://docs.omdoc.org/latin/math/topology.mmt#1236.42.38:1236.42.38
  <stacktrace>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeError(NotationBasedParser.scala:44)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:224)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>scala.collection.immutable.List.map(List.scala:273)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>scala.collection.immutable.List.map(List.scala:277)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.logGroup(NotationBasedParser.scala:25)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.apply(NotationBasedParser.scala:128)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.puCont(StructureParser.scala:100)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readParsedObject(StructureParser.scala:238)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.doComponent(StructureParser.scala:243)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readConstant(StructureParser.scala:459)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInModule(StructureParser.scala:750)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply$mcV$sp(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readTheory(StructureParser.scala:341)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInDocument(StructureParser.scala:610)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply$mcV$sp(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:136)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:128)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:44)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error target="parser" sref="http://docs.omdoc.org/latin/math/topology.mmt#1249.42.51:1249.42.51" type="info.kwarc.mmt.api.SourceError" shortMsg="unbound token: ⇒" level="2">
  source error (parser) at http://docs.omdoc.org/latin/math/topology.mmt#1249.42.51:1249.42.51
  <stacktrace>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeError(NotationBasedParser.scala:44)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:224)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>scala.collection.immutable.List.map(List.scala:277)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>scala.collection.immutable.List.map(List.scala:277)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>scala.collection.immutable.List.map(List.scala:277)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.logGroup(NotationBasedParser.scala:25)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.apply(NotationBasedParser.scala:128)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.puCont(StructureParser.scala:100)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readParsedObject(StructureParser.scala:238)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.doComponent(StructureParser.scala:243)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readConstant(StructureParser.scala:459)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInModule(StructureParser.scala:750)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply$mcV$sp(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readTheory(StructureParser.scala:341)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInDocument(StructureParser.scala:610)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply$mcV$sp(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:136)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:128)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:44)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error target="parser" sref="http://docs.omdoc.org/latin/math/topology.mmt#1258.42.60:1258.42.60" type="info.kwarc.mmt.api.SourceError" shortMsg="unbound token: ⇒" level="2">
  source error (parser) at http://docs.omdoc.org/latin/math/topology.mmt#1258.42.60:1258.42.60
  <stacktrace>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeError(NotationBasedParser.scala:44)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:224)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>scala.collection.immutable.List.map(List.scala:277)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.logGroup(NotationBasedParser.scala:25)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.apply(NotationBasedParser.scala:128)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.puCont(StructureParser.scala:100)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readParsedObject(StructureParser.scala:238)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.doComponent(StructureParser.scala:243)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readConstant(StructureParser.scala:459)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInModule(StructureParser.scala:750)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply$mcV$sp(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readTheory(StructureParser.scala:341)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInDocument(StructureParser.scala:610)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply$mcV$sp(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:136)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:128)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:44)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error target="parser" sref="http://docs.omdoc.org/latin/math/topology.mmt#1407.48.35:1407.48.35" type="info.kwarc.mmt.api.SourceError" shortMsg="unbound token: ∪" level="2">
  source error (parser) at http://docs.omdoc.org/latin/math/topology.mmt#1407.48.35:1407.48.35
  <stacktrace>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeError(NotationBasedParser.scala:44)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:224)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>scala.collection.immutable.List.map(List.scala:277)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.logGroup(NotationBasedParser.scala:25)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.apply(NotationBasedParser.scala:128)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.puCont(StructureParser.scala:100)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readParsedObject(StructureParser.scala:238)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.doComponent(StructureParser.scala:243)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readConstant(StructureParser.scala:459)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInModule(StructureParser.scala:750)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply$mcV$sp(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readTheory(StructureParser.scala:341)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInDocument(StructureParser.scala:610)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply$mcV$sp(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:136)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:128)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:44)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error target="parser" sref="http://docs.omdoc.org/latin/math/topology.mmt#1411.48.39:1411.48.39" type="info.kwarc.mmt.api.SourceError" shortMsg="unbound token: ⇒" level="2">
  source error (parser) at http://docs.omdoc.org/latin/math/topology.mmt#1411.48.39:1411.48.39
  <stacktrace>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeError(NotationBasedParser.scala:44)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:224)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>scala.collection.immutable.List.map(List.scala:277)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.logGroup(NotationBasedParser.scala:25)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.apply(NotationBasedParser.scala:128)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.puCont(StructureParser.scala:100)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readParsedObject(StructureParser.scala:238)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.doComponent(StructureParser.scala:243)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readConstant(StructureParser.scala:459)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInModule(StructureParser.scala:750)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply$mcV$sp(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readTheory(StructureParser.scala:341)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInDocument(StructureParser.scala:610)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply$mcV$sp(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:136)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:128)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:44)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error target="parser" sref="http://docs.omdoc.org/latin/math/topology.mmt#1419.48.47:1419.48.47" type="info.kwarc.mmt.api.SourceError" shortMsg="unbound token: ∨" level="2">
  source error (parser) at http://docs.omdoc.org/latin/math/topology.mmt#1419.48.47:1419.48.47
  <stacktrace>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeError(NotationBasedParser.scala:44)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:224)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>scala.collection.immutable.List.map(List.scala:277)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.logGroup(NotationBasedParser.scala:25)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.apply(NotationBasedParser.scala:128)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.puCont(StructureParser.scala:100)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readParsedObject(StructureParser.scala:238)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.doComponent(StructureParser.scala:243)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readConstant(StructureParser.scala:459)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInModule(StructureParser.scala:750)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply$mcV$sp(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readTheory(StructureParser.scala:341)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInDocument(StructureParser.scala:610)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply$mcV$sp(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:136)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:128)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:44)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error target="parser" sref="http://docs.omdoc.org/latin/math/topology.mmt#1453.49.25:1453.49.25" type="info.kwarc.mmt.api.SourceError" shortMsg="unbound token: ¬" level="2">
  source error (parser) at http://docs.omdoc.org/latin/math/topology.mmt#1453.49.25:1453.49.25
  <stacktrace>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeError(NotationBasedParser.scala:44)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:224)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>scala.collection.immutable.List.map(List.scala:273)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.logGroup(NotationBasedParser.scala:25)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.apply(NotationBasedParser.scala:128)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.puCont(StructureParser.scala:100)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readParsedObject(StructureParser.scala:238)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.doComponent(StructureParser.scala:243)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readConstant(StructureParser.scala:459)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInModule(StructureParser.scala:750)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply$mcV$sp(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readTheory(StructureParser.scala:341)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInDocument(StructureParser.scala:610)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply$mcV$sp(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:136)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:128)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:44)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error target="parser" sref="http://docs.omdoc.org/latin/math/topology.mmt#1459.49.31:1459.49.31" type="info.kwarc.mmt.api.SourceError" shortMsg="unbound token: ∅" level="2">
  source error (parser) at http://docs.omdoc.org/latin/math/topology.mmt#1459.49.31:1459.49.31
  <stacktrace>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeError(NotationBasedParser.scala:44)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:224)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:391)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.logGroup(NotationBasedParser.scala:25)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.apply(NotationBasedParser.scala:128)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.puCont(StructureParser.scala:100)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readParsedObject(StructureParser.scala:238)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.doComponent(StructureParser.scala:243)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readConstant(StructureParser.scala:459)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInModule(StructureParser.scala:750)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply$mcV$sp(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readTheory(StructureParser.scala:341)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInDocument(StructureParser.scala:610)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply$mcV$sp(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:136)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:128)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:44)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error target="parser" sref="http://docs.omdoc.org/latin/math/topology.mmt#1728.59.19:1728.59.19" type="info.kwarc.mmt.api.SourceError" shortMsg="unbound token: ∅" level="2">
  source error (parser) at http://docs.omdoc.org/latin/math/topology.mmt#1728.59.19:1728.59.19
  <stacktrace>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeError(NotationBasedParser.scala:44)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:224)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:391)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.logGroup(NotationBasedParser.scala:25)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.apply(NotationBasedParser.scala:128)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.puCont(StructureParser.scala:100)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readParsedObject(StructureParser.scala:238)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.doComponent(StructureParser.scala:243)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readConstant(StructureParser.scala:459)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInModule(StructureParser.scala:750)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply$mcV$sp(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readTheory(StructureParser.scala:341)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInDocument(StructureParser.scala:610)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply$mcV$sp(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:136)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:128)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:44)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error target="structure-parser" sref="http://docs.omdoc.org/latin/math/topology.mmt#1740.60.2:1748.60.10" type="info.kwarc.mmt.api.SourceError" shortMsg="expected ':', '=', '#', '##', '@', 'role', found full_open" level="2">
  source error (structure-parser) at http://docs.omdoc.org/latin/math/topology.mmt#1740.60.2:1748.60.10
  <stacktrace>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.makeError(StructureParser.scala:145)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readConstant(StructureParser.scala:488)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInModule(StructureParser.scala:750)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply$mcV$sp(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readTheory(StructureParser.scala:341)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInDocument(StructureParser.scala:610)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply$mcV$sp(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:136)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:128)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:44)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error target="structure-parser" sref="http://docs.omdoc.org/latin/math/topology.mmt#1751.60.13:1751.60.13" type="info.kwarc.mmt.api.SourceError" shortMsg="type of this constant already given, ignored" level="2">
  source error (structure-parser) at http://docs.omdoc.org/latin/math/topology.mmt#1751.60.13:1751.60.13
  <stacktrace>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.makeError(StructureParser.scala:145)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readConstant(StructureParser.scala:456)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInModule(StructureParser.scala:750)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply$mcV$sp(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readTheory(StructureParser.scala:341)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInDocument(StructureParser.scala:610)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply$mcV$sp(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:136)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:128)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:44)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error target="parser" sref="http://docs.omdoc.org/latin/math/topology.mmt#1820.61.47:1820.61.47" type="info.kwarc.mmt.api.SourceError" shortMsg="unbound token: ⋃" level="2">
  source error (parser) at http://docs.omdoc.org/latin/math/topology.mmt#1820.61.47:1820.61.47
  <stacktrace>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeError(NotationBasedParser.scala:44)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:224)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>scala.collection.immutable.List.map(List.scala:273)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18$$anonfun$apply$14.apply(NotationBasedParser.scala:277)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18$$anonfun$apply$14.apply(NotationBasedParser.scala:277)</element>
    <element>scala.collection.immutable.List.map(List.scala:277)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:277)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.logGroup(NotationBasedParser.scala:25)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.apply(NotationBasedParser.scala:128)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.puCont(StructureParser.scala:100)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readParsedObject(StructureParser.scala:238)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.doComponent(StructureParser.scala:243)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readConstant(StructureParser.scala:459)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInModule(StructureParser.scala:750)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply$mcV$sp(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readTheory(StructureParser.scala:341)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInDocument(StructureParser.scala:610)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply$mcV$sp(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:136)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:128)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:44)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error target="parser" sref="http://docs.omdoc.org/latin/math/topology.mmt#1896.62.64:1896.62.64" type="info.kwarc.mmt.api.SourceError" shortMsg="unbound token: ∩" level="2">
  source error (parser) at http://docs.omdoc.org/latin/math/topology.mmt#1896.62.64:1896.62.64
  <stacktrace>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeError(NotationBasedParser.scala:44)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:224)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>scala.collection.immutable.List.map(List.scala:277)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18$$anonfun$apply$14.apply(NotationBasedParser.scala:277)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18$$anonfun$apply$14.apply(NotationBasedParser.scala:277)</element>
    <element>scala.collection.immutable.List.map(List.scala:277)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:277)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.logGroup(NotationBasedParser.scala:25)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.apply(NotationBasedParser.scala:128)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.puCont(StructureParser.scala:100)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readParsedObject(StructureParser.scala:238)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.doComponent(StructureParser.scala:243)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readConstant(StructureParser.scala:459)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInModule(StructureParser.scala:750)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply$mcV$sp(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readTheory(StructureParser.scala:341)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInDocument(StructureParser.scala:610)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply$mcV$sp(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:136)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:128)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:44)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error target="structure-parser" sref="http://docs.omdoc.org/latin/math/topology.mmt#2104.71.5:2104.71.5" type="info.kwarc.mmt.api.SourceError" shortMsg="expected ':', '=', '#', '##', '@', 'role', found -" level="2">
  source error (structure-parser) at http://docs.omdoc.org/latin/math/topology.mmt#2104.71.5:2104.71.5
  <stacktrace>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.makeError(StructureParser.scala:145)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readConstant(StructureParser.scala:488)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInModule(StructureParser.scala:750)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply$mcV$sp(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readTheory(StructureParser.scala:341)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInDocument(StructureParser.scala:610)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply$mcV$sp(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:136)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:128)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:44)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error target="structure-parser" sref="http://docs.omdoc.org/latin/math/topology.mmt#2105.71.6:2109.71.10" type="info.kwarc.mmt.api.SourceError" shortMsg="expected ':', '=', '#', '##', '@', 'role', found empty" level="2">
  source error (structure-parser) at http://docs.omdoc.org/latin/math/topology.mmt#2105.71.6:2109.71.10
  <stacktrace>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.makeError(StructureParser.scala:145)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readConstant(StructureParser.scala:488)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInModule(StructureParser.scala:750)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply$mcV$sp(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readTheory(StructureParser.scala:341)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInDocument(StructureParser.scala:610)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply$mcV$sp(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:136)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:128)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:44)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error target="parser" sref="http://docs.omdoc.org/latin/math/topology.mmt#2121.71.22:2128.71.29" type="info.kwarc.mmt.api.SourceError" shortMsg="unbound token: nonempty" level="2">
  source error (parser) at http://docs.omdoc.org/latin/math/topology.mmt#2121.71.22:2128.71.29
  <stacktrace>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeError(NotationBasedParser.scala:44)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:224)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>scala.collection.immutable.List.map(List.scala:273)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.logGroup(NotationBasedParser.scala:25)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.apply(NotationBasedParser.scala:128)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.puCont(StructureParser.scala:100)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readParsedObject(StructureParser.scala:238)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.doComponent(StructureParser.scala:243)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readConstant(StructureParser.scala:459)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInModule(StructureParser.scala:750)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply$mcV$sp(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readTheory(StructureParser.scala:341)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInDocument(StructureParser.scala:610)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply$mcV$sp(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:136)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:128)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:44)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error target="parser" sref="http://docs.omdoc.org/latin/math/topology.mmt#2167.72.31:2167.72.31" type="info.kwarc.mmt.api.SourceError" shortMsg="unbound token: ‍" level="2">
  source error (parser) at http://docs.omdoc.org/latin/math/topology.mmt#2167.72.31:2167.72.31
  <stacktrace>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeError(NotationBasedParser.scala:44)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:224)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>scala.collection.immutable.List.map(List.scala:277)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18$$anonfun$apply$14.apply(NotationBasedParser.scala:277)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18$$anonfun$apply$14.apply(NotationBasedParser.scala:277)</element>
    <element>scala.collection.immutable.List.map(List.scala:273)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:277)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.logGroup(NotationBasedParser.scala:25)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.apply(NotationBasedParser.scala:128)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.puCont(StructureParser.scala:100)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readParsedObject(StructureParser.scala:238)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.doComponent(StructureParser.scala:243)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readConstant(StructureParser.scala:459)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInModule(StructureParser.scala:750)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply$mcV$sp(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readTheory(StructureParser.scala:341)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInDocument(StructureParser.scala:610)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply$mcV$sp(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:136)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:128)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:44)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error target="parser" sref="http://docs.omdoc.org/latin/math/topology.mmt#2314.74.66:2314.74.66" type="info.kwarc.mmt.api.SourceError" shortMsg="unbound token: ∩" level="2">
  source error (parser) at http://docs.omdoc.org/latin/math/topology.mmt#2314.74.66:2314.74.66
  <stacktrace>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeError(NotationBasedParser.scala:44)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:224)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>scala.collection.immutable.List.map(List.scala:277)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18$$anonfun$apply$14.apply(NotationBasedParser.scala:277)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18$$anonfun$apply$14.apply(NotationBasedParser.scala:277)</element>
    <element>scala.collection.immutable.List.map(List.scala:277)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:277)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.logGroup(NotationBasedParser.scala:25)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.apply(NotationBasedParser.scala:128)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.puCont(StructureParser.scala:100)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readParsedObject(StructureParser.scala:238)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.doComponent(StructureParser.scala:243)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readConstant(StructureParser.scala:459)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInModule(StructureParser.scala:750)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply$mcV$sp(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readTheory(StructureParser.scala:341)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInDocument(StructureParser.scala:610)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply$mcV$sp(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:136)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:128)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:44)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error target="parser" sref="http://docs.omdoc.org/latin/math/topology.mmt#2360.75.41:2360.75.41" type="info.kwarc.mmt.api.SourceError" shortMsg="unbound token: ∃" level="2">
  source error (parser) at http://docs.omdoc.org/latin/math/topology.mmt#2360.75.41:2360.75.41
  <stacktrace>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeError(NotationBasedParser.scala:44)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:224)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>scala.collection.immutable.List.map(List.scala:273)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18$$anonfun$apply$14.apply(NotationBasedParser.scala:277)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18$$anonfun$apply$14.apply(NotationBasedParser.scala:277)</element>
    <element>scala.collection.immutable.List.map(List.scala:277)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:277)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.logGroup(NotationBasedParser.scala:25)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.apply(NotationBasedParser.scala:128)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.puCont(StructureParser.scala:100)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readParsedObject(StructureParser.scala:238)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.doComponent(StructureParser.scala:243)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readConstant(StructureParser.scala:459)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInModule(StructureParser.scala:750)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply$mcV$sp(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readTheory(StructureParser.scala:341)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInDocument(StructureParser.scala:610)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply$mcV$sp(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:136)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:128)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:44)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error target="parser" sref="http://docs.omdoc.org/latin/math/topology.mmt#2366.75.47:2366.75.47" type="info.kwarc.mmt.api.SourceError" shortMsg="unbound token: ∀" level="2">
  source error (parser) at http://docs.omdoc.org/latin/math/topology.mmt#2366.75.47:2366.75.47
  <stacktrace>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeError(NotationBasedParser.scala:44)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:224)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>scala.collection.immutable.List.map(List.scala:273)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>scala.collection.immutable.List.map(List.scala:277)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18$$anonfun$apply$14.apply(NotationBasedParser.scala:277)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18$$anonfun$apply$14.apply(NotationBasedParser.scala:277)</element>
    <element>scala.collection.immutable.List.map(List.scala:277)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:277)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.logGroup(NotationBasedParser.scala:25)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.apply(NotationBasedParser.scala:128)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.puCont(StructureParser.scala:100)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readParsedObject(StructureParser.scala:238)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.doComponent(StructureParser.scala:243)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readConstant(StructureParser.scala:459)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInModule(StructureParser.scala:750)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply$mcV$sp(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readTheory(StructureParser.scala:341)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInDocument(StructureParser.scala:610)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply$mcV$sp(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:136)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:128)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:44)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error target="parser" sref="http://docs.omdoc.org/latin/math/topology.mmt#2378.75.59:2378.75.59" type="info.kwarc.mmt.api.SourceError" shortMsg="unbound token: ∧" level="2">
  source error (parser) at http://docs.omdoc.org/latin/math/topology.mmt#2378.75.59:2378.75.59
  <stacktrace>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeError(NotationBasedParser.scala:44)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:224)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>scala.collection.immutable.List.map(List.scala:277)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>scala.collection.immutable.List.map(List.scala:277)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>scala.collection.immutable.List.map(List.scala:277)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18$$anonfun$apply$14.apply(NotationBasedParser.scala:277)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18$$anonfun$apply$14.apply(NotationBasedParser.scala:277)</element>
    <element>scala.collection.immutable.List.map(List.scala:277)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:277)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.logGroup(NotationBasedParser.scala:25)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.apply(NotationBasedParser.scala:128)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.puCont(StructureParser.scala:100)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readParsedObject(StructureParser.scala:238)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.doComponent(StructureParser.scala:243)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readConstant(StructureParser.scala:459)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInModule(StructureParser.scala:750)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply$mcV$sp(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readTheory(StructureParser.scala:341)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInDocument(StructureParser.scala:610)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply$mcV$sp(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:136)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:128)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:44)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error target="parser" sref="http://docs.omdoc.org/latin/math/topology.mmt#2388.75.69:2388.75.69" type="info.kwarc.mmt.api.SourceError" shortMsg="unbound token: ⇒" level="2">
  source error (parser) at http://docs.omdoc.org/latin/math/topology.mmt#2388.75.69:2388.75.69
  <stacktrace>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeError(NotationBasedParser.scala:44)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:224)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>scala.collection.immutable.List.map(List.scala:277)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>scala.collection.immutable.List.map(List.scala:277)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>scala.collection.immutable.List.map(List.scala:277)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>scala.collection.immutable.List.map(List.scala:277)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18$$anonfun$apply$14.apply(NotationBasedParser.scala:277)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18$$anonfun$apply$14.apply(NotationBasedParser.scala:277)</element>
    <element>scala.collection.immutable.List.map(List.scala:277)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:277)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.logGroup(NotationBasedParser.scala:25)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.apply(NotationBasedParser.scala:128)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.puCont(StructureParser.scala:100)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readParsedObject(StructureParser.scala:238)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.doComponent(StructureParser.scala:243)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readConstant(StructureParser.scala:459)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInModule(StructureParser.scala:750)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply$mcV$sp(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readTheory(StructureParser.scala:341)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInDocument(StructureParser.scala:610)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply$mcV$sp(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:136)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:128)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:44)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/math?ClosureSystem?cl?type:  |- exp ℘℘X INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/math?ClosureSystem?intersection?type:  |- {Q:exp ℘℘X}Q⊆‍OO→(⋂ Q)‍∈OO INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/math?ClosureSystem?intersection?type:  |- {Q:exp ℘℘X}Q⊆‍OO→(⋂ Q)‍∈OO INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/math?ClosureSystem?intersection?type:  |- {Q:exp ℘℘X}Q⊆‍OO→(⋂ Q)‍∈OO INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/math?ClosureSystem?full_closed?type:  |- (ded (full X))‍∈CC INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/math?ClosedTopology?empty_closed?type:  |- (ded ∅)‍∈CC INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/math?ClosedTopology?finite_union?type:  |- {A,B}(ded A)‍∈CC→(ded B)‍∈CC→(ded (A ∪ B))‍∈CC INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/math?ClosedTopology?finite_union?type:  |- {A,B}(ded A)‍∈CC→(ded B)‍∈CC→(ded (A ∪ B))‍∈CC INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/math?ClosedTopology?finite_union?type:  |- {A,B}(ded A)‍∈CC→(ded B)‍∈CC→(ded (A ∪ B))‍∈CC INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/math?ClosedTopology?finite_union?type:  |- {A,B}(ded A)‍∈CC→(ded B)‍∈CC→(ded (A ∪ B))‍∈CC INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/math?ClosureOperator?cl?type:  |- exp ℘X→exp ℘X INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/math?ClosureOperator?cl?type:  |- exp ℘X→exp ℘X INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/math?ClosureOperator?extensive?type:  |- {A}(ded A)⊆‍(cl A) INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/math?ClosureOperator?monotonous?type:  |- {A,B}((ded A)⊆‍(B ⇒ cl A))⊆‍(cl B) INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/math?ClosureOperator?monotonous?type:  |- {A,B}((ded A)⊆‍(B ⇒ cl A))⊆‍(cl B) INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/math?ClosureOperator?idempotent?type:  |- {A}ded (cl (cl A) = = cl A) INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/math?ClosureOperator?idempotent?type:  |- {A}ded (cl (cl A) = = cl A) INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/math?ClosureTopology?union?type:  |- {A,B}ded (cl (A ∪ B) = = cl A ∪ cl B) INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/math?ClosureTopology?union?type:  |- {A,B}ded (cl (A ∪ B) = = cl A ∪ cl B) INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/math?ClosureTopology?union?type:  |- {A,B}ded (cl (A ∪ B) = = cl A ∪ cl B) INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/math?ClosureTopology?union?type:  |- {A,B}ded (cl (A ∪ B) = = cl A ∪ cl B) INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/math?ClosureTopology?union?type:  |- {A,B}ded (cl (A ∪ B) = = cl A ∪ cl B) INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/math?ClosureTopology?empty?type:  |- cl ∅ = = ∅ INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/math?ClosureTopology?empty?type:  |- cl ∅ = = ∅ INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/math?Closeness?close?type:  |- exp X→exp ℘X→o INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$1.apply(RuleBasedChecker.scala:56)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$1.apply(RuleBasedChecker.scala:55)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:55)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/math?Closeness?in_close?type:  |- {x,A}((ded x)‍∈(A ⇒ x))|A INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/math?Closeness?in_close?type:  |- {x,A}((ded x)‍∈(A ⇒ x))|A INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/math?Closeness?in_close?type:  |- {x,A}((ded x)‍∈(A ⇒ x))|A INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/math?Closeness?in_close?type:  |- {x,A}((ded x)‍∈(A ⇒ x))|A INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/math?Closeness?bigger_close?type:  |- {x,A,B}(((ded x)|(A ⇒ A))⊆‍(B ⇒ x))|B INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/math?Closeness?bigger_close?type:  |- {x,A,B}(((ded x)|(A ⇒ A))⊆‍(B ⇒ x))|B INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/math?Closeness?bigger_close?type:  |- {x,A,B}(((ded x)|(A ⇒ A))⊆‍(B ⇒ x))|B INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/math?Closeness?bigger_close?type:  |- {x,A,B}(((ded x)|(A ⇒ A))⊆‍(B ⇒ x))|B INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/math?Closeness?bigger_close?type:  |- {x,A,B}(((ded x)|(A ⇒ A))⊆‍(B ⇒ x))|B INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/math?Closeness?transitive?type:  |- {A,B,x}((ded x)|(B ⇒ (∀ [x](x‍∈(B ⇒ x))|A) ⇒ x))|A INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/math?Closeness?transitive?type:  |- {A,B,x}((ded x)|(B ⇒ (∀ [x](x‍∈(B ⇒ x))|A) ⇒ x))|A INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/math?Closeness?transitive?type:  |- {A,B,x}((ded x)|(B ⇒ (∀ [x](x‍∈(B ⇒ x))|A) ⇒ x))|A INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/math?Closeness?transitive?type:  |- {A,B,x}((ded x)|(B ⇒ (∀ [x](x‍∈(B ⇒ x))|A) ⇒ x))|A INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/math?Closeness?transitive?type:  |- {A,B,x}((ded x)|(B ⇒ (∀ [x](x‍∈(B ⇒ x))|A) ⇒ x))|A INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/math?Closeness?transitive?type:  |- {A,B,x}((ded x)|(B ⇒ (∀ [x](x‍∈(B ⇒ x))|A) ⇒ x))|A INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/math?Closeness?transitive?type:  |- {A,B,x}((ded x)|(B ⇒ (∀ [x](x‍∈(B ⇒ x))|A) ⇒ x))|A INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/math?Closeness?transitive?type:  |- {A,B,x}((ded x)|(B ⇒ (∀ [x](x‍∈(B ⇒ x))|A) ⇒ x))|A INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/math?Closeness?transitive?type:  |- {A,B,x}((ded x)|(B ⇒ (∀ [x](x‍∈(B ⇒ x))|A) ⇒ x))|A INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/math?ClosenessTopology?finite_union?type:  |- {x,A,B}(((ded x)|(A ∪ B ⇒ x))|(A ∨ x))|B INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/math?ClosenessTopology?finite_union?type:  |- {x,A,B}(((ded x)|(A ∪ B ⇒ x))|(A ∨ x))|B INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/math?ClosenessTopology?finite_union?type:  |- {x,A,B}(((ded x)|(A ∪ B ⇒ x))|(A ∨ x))|B INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/math?ClosenessTopology?finite_union?type:  |- {x,A,B}(((ded x)|(A ∪ B ⇒ x))|(A ∨ x))|B INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/math?ClosenessTopology?finite_union?type:  |- {x,A,B}(((ded x)|(A ∪ B ⇒ x))|(A ∨ x))|B INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/math?ClosenessTopology?finite_union?type:  |- {x,A,B}(((ded x)|(A ∪ B ⇒ x))|(A ∨ x))|B INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/math?ClosenessTopology?finite_union?type:  |- {x,A,B}(((ded x)|(A ∪ B ⇒ x))|(A ∨ x))|B INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/math?ClosenessTopology?finite_union?type:  |- {x,A,B}(((ded x)|(A ∪ B ⇒ x))|(A ∨ x))|B INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/math?ClosenessTopology?finite_union?type:  |- {x,A,B}(((ded x)|(A ∪ B ⇒ x))|(A ∨ x))|B INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/math?ClosenessTopology?finite_union?type:  |- {x,A,B}(((ded x)|(A ∪ B ⇒ x))|(A ∨ x))|B INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/math?ClosenessTopology?empty?type:  |- {x}(ded (¬ x))|∅ INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/math?ClosenessTopology?empty?type:  |- {x}(ded (¬ x))|∅ INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/math?ClosenessTopology?empty?type:  |- {x}(ded (¬ x))|∅ INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/math?ClosenessTopology?empty?type:  |- {x}(ded (¬ x))|∅ INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/math?OpenTopology?OO?type:  |- exp ℘℘X INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/math?OpenTopology?empty_open?type:  |- (ded ∅)‍∈OO INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/math?OpenTopology?union?type:  |- {Q:exp ℘℘X}Q⊆‍OO→(⋃ Q)‍∈OO INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/math?OpenTopology?union?type:  |- {Q:exp ℘℘X}Q⊆‍OO→(⋃ Q)‍∈OO INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/math?OpenTopology?union?type:  |- {Q:exp ℘℘X}Q⊆‍OO→(⋃ Q)‍∈OO INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/math?OpenTopology?finite_intersection?type:  |- {A,B}(ded A)‍∈OO→(ded B)‍∈OO→(ded (A ∩ B))‍∈OO INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/math?OpenTopology?finite_intersection?type:  |- {A,B}(ded A)‍∈OO→(ded B)‍∈OO→(ded (A ∩ B))‍∈OO INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/math?OpenTopology?finite_intersection?type:  |- {A,B}(ded A)‍∈OO→(ded B)‍∈OO→(ded (A ∩ B))‍∈OO INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/math?OpenTopology?finite_intersection?type:  |- {A,B}(ded A)‍∈OO→(ded B)‍∈OO→(ded (A ∩ B))‍∈OO INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/math?NeighborhoodTopology?NN?type:  |- exp X→exp ℘℘X INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$1.apply(RuleBasedChecker.scala:56)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$1.apply(RuleBasedChecker.scala:55)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:55)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/math?NeighborhoodTopology?in?type:  |- exp X→exp ℘X→o INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$1.apply(RuleBasedChecker.scala:56)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$1.apply(RuleBasedChecker.scala:55)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:55)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/math?NeighborhoodTopology?in?definition:  |- [x,N]N‍∈(NN x) : exp X→exp ℘X→o" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$10.apply(MMTStructureChecker.scala:183)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$10.apply(MMTStructureChecker.scala:177)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:177)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/math?NeighborhoodTopology?non?type:  |- {x}ded (nonempty NN x) INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/math?NeighborhoodTopology?inneighborhood?type:  |- {x,N}(ded (x ‍))∘N→(ded x)‍∈N INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/math?NeighborhoodTopology?inneighborhood?type:  |- {x,N}(ded (x ‍))∘N→(ded x)‍∈N INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/math?NeighborhoodTopology?inneighborhood?type:  |- {x,N}(ded (x ‍))∘N→(ded x)‍∈N INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/math?NeighborhoodTopology?inneighborhood?type:  |- {x,N}(ded (x ‍))∘N→(ded x)‍∈N INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/math?NeighborhoodTopology?inneighborhood?type:  |- {x,N}(ded (x ‍))∘N→(ded x)‍∈N INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/math?NeighborhoodTopology?inneighborhood?type:  |- {x,N}(ded (x ‍))∘N→(ded x)‍∈N INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/math?NeighborhoodTopology?inneighborhood?type:  |- {x,N}(ded (x ‍))∘N→(ded x)‍∈N INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/math?NeighborhoodTopology?inneighborhood?type:  |- {x,N}(ded (x ‍))∘N→(ded x)‍∈N INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/math?NeighborhoodTopology?inneighborhood?type:  |- {x,N}(ded (x ‍))∘N→(ded x)‍∈N INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/math?NeighborhoodTopology?inneighborhood?type:  |- {x,N}(ded (x ‍))∘N→(ded x)‍∈N INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/math?NeighborhoodTopology?inneighborhood?type:  |- {x,N}(ded (x ‍))∘N→(ded x)‍∈N INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/math?NeighborhoodTopology?inneighborhood?type:  |- {x,N}(ded (x ‍))∘N→(ded x)‍∈N INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/math?NeighborhoodTopology?superset_closed?type:  |- {M,N,x}(ded x)∘M→M⊆‍N→(ded x)∘N INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$1.apply(RuleBasedChecker.scala:56)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$1.apply(RuleBasedChecker.scala:55)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:55)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/math?NeighborhoodTopology?intersection_closed?type:  |- {M,N,x}(ded x)∘M→(ded x)∘N→(ded x)∘(M ∩ N) INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$1.apply(RuleBasedChecker.scala:56)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$1.apply(RuleBasedChecker.scala:55)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:55)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/math?NeighborhoodTopology?openness?type:  |- {N,x}(ded x)∘N→ded (∃ [M]∀ [y]x∘(M ∧ (y‍∈(M ⇒ y))∘N)) INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$1.apply(RuleBasedChecker.scala:56)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$1.apply(RuleBasedChecker.scala:55)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:55)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
</errors>
