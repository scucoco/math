<errors>
<error target="structure-parser" sref="http://docs.omdoc.org/latin/logics/first-order/syntax/power_sorts.mmt#221.8.11:257.8.47" type="info.kwarc.mmt.api.SourceError" shortMsg="during parsing: parse error: unclosed '[' in [" level="2">
  source error (structure-parser) at http://docs.omdoc.org/latin/logics/first-order/syntax/power_sorts.mmt#221.8.11:257.8.47
  <stacktrace>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.makeError(StructureParser.scala:145)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.puCont(StructureParser.scala:103)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readParsedObject(StructureParser.scala:238)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.doComponent(StructureParser.scala:243)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readConstant(StructureParser.scala:465)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInModule(StructureParser.scala:750)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply$mcV$sp(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readTheory(StructureParser.scala:341)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInDocument(StructureParser.scala:610)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply$mcV$sp(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:136)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:128)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:44)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
  <error type="info.kwarc.mmt.api.ParseError" shortMsg="parse error: unclosed '[' in [" level="2">
    <stacktrace>
      <element>info.kwarc.mmt.api.LocalRef$.complex$1(Path.scala:254)</element>
      <element>info.kwarc.mmt.api.LocalRef$.start$1(Path.scala:249)</element>
      <element>info.kwarc.mmt.api.LocalRef$.splitName(Path.scala:259)</element>
      <element>info.kwarc.mmt.api.LocalRef$.parse(Path.scala:264)</element>
      <element>info.kwarc.mmt.api.LocalName$.parse(Path.scala:175)</element>
      <element>info.kwarc.mmt.api.LocalName$.parse(Path.scala:176)</element>
      <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:193)</element>
      <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
      <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
      <element>scala.collection.immutable.List.map(List.scala:273)</element>
      <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:401)</element>
      <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
      <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
      <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
      <element>info.kwarc.mmt.api.parser.NotationBasedParser.logGroup(NotationBasedParser.scala:25)</element>
      <element>info.kwarc.mmt.api.parser.NotationBasedParser.apply(NotationBasedParser.scala:128)</element>
      <element>info.kwarc.mmt.api.parser.KeywordBasedParser.puCont(StructureParser.scala:100)</element>
      <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readParsedObject(StructureParser.scala:238)</element>
      <element>info.kwarc.mmt.api.parser.KeywordBasedParser.doComponent(StructureParser.scala:243)</element>
      <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readConstant(StructureParser.scala:465)</element>
      <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInModule(StructureParser.scala:750)</element>
      <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply$mcV$sp(StructureParser.scala:342)</element>
      <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
      <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
      <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
      <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
      <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readTheory(StructureParser.scala:341)</element>
      <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInDocument(StructureParser.scala:610)</element>
      <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply$mcV$sp(StructureParser.scala:137)</element>
      <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
      <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
      <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
      <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
      <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:136)</element>
      <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:128)</element>
      <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:44)</element>
      <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
      <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
      <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
      <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
      <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
      <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
      <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
      <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
      <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
      <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
      <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
      <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
      <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
      <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
      <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
      <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
      <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
      <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
      <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
      <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
      <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
      <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
      <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
      <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
      <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
      <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
      <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
      <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
      <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
      <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
      <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
      <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
      <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
      <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
      <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
      <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
      <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
      <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
      <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
      <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
      <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
      <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
      <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
      <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
      <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
      <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
      <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
      <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
      <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
      <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
      <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
      <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
      <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
      <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
      <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
      <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
      <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
      <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
      <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
      <element>scala.Option.foreach(Option.scala:257)</element>
      <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
      <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
      <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
      <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
      <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
      <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
      <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
      <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
    </stacktrace>
  </error>
</error>
<error target="parser" sref="http://docs.omdoc.org/latin/logics/first-order/syntax/power_sorts.mmt#315.10.46:315.10.46" type="info.kwarc.mmt.api.SourceError" shortMsg="unbound token: =" level="2">
  source error (parser) at http://docs.omdoc.org/latin/logics/first-order/syntax/power_sorts.mmt#315.10.46:315.10.46
  <stacktrace>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeError(NotationBasedParser.scala:44)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:224)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>scala.collection.immutable.List.map(List.scala:277)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18$$anonfun$apply$14.apply(NotationBasedParser.scala:277)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18$$anonfun$apply$14.apply(NotationBasedParser.scala:277)</element>
    <element>scala.collection.immutable.List.map(List.scala:277)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:277)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.logGroup(NotationBasedParser.scala:25)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.apply(NotationBasedParser.scala:128)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.puCont(StructureParser.scala:100)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readParsedObject(StructureParser.scala:238)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.doComponent(StructureParser.scala:243)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readConstant(StructureParser.scala:459)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInModule(StructureParser.scala:750)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply$mcV$sp(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readTheory(StructureParser.scala:341)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInDocument(StructureParser.scala:610)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply$mcV$sp(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:136)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:128)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:44)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error target="parser" sref="http://docs.omdoc.org/latin/logics/first-order/syntax/power_sorts.mmt#316.10.47:316.10.47" type="info.kwarc.mmt.api.SourceError" shortMsg="unbound token: =" level="2">
  source error (parser) at http://docs.omdoc.org/latin/logics/first-order/syntax/power_sorts.mmt#316.10.47:316.10.47
  <stacktrace>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeError(NotationBasedParser.scala:44)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:224)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>scala.collection.immutable.List.map(List.scala:277)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18$$anonfun$apply$14.apply(NotationBasedParser.scala:277)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18$$anonfun$apply$14.apply(NotationBasedParser.scala:277)</element>
    <element>scala.collection.immutable.List.map(List.scala:277)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:277)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.logGroup(NotationBasedParser.scala:25)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.apply(NotationBasedParser.scala:128)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.puCont(StructureParser.scala:100)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readParsedObject(StructureParser.scala:238)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.doComponent(StructureParser.scala:243)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readConstant(StructureParser.scala:459)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInModule(StructureParser.scala:750)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply$mcV$sp(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readTheory(StructureParser.scala:341)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInDocument(StructureParser.scala:610)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply$mcV$sp(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:136)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:128)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:44)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error target="parser" sref="http://docs.omdoc.org/latin/logics/first-order/syntax/power_sorts.mmt#397.12.42:397.12.42" type="info.kwarc.mmt.api.SourceError" shortMsg="unbound token: ⇔" level="2">
  source error (parser) at http://docs.omdoc.org/latin/logics/first-order/syntax/power_sorts.mmt#397.12.42:397.12.42
  <stacktrace>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeError(NotationBasedParser.scala:44)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:224)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$31.apply(NotationBasedParser.scala:401)</element>
    <element>scala.collection.immutable.List.map(List.scala:277)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:401)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:268)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$18.apply(NotationBasedParser.scala:260)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.info$kwarc$mmt$api$parser$NotationBasedParser$$makeTerm(NotationBasedParser.scala:260)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser$$anonfun$2.apply(NotationBasedParser.scala:129)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.logGroup(NotationBasedParser.scala:25)</element>
    <element>info.kwarc.mmt.api.parser.NotationBasedParser.apply(NotationBasedParser.scala:128)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.puCont(StructureParser.scala:100)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readParsedObject(StructureParser.scala:238)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.doComponent(StructureParser.scala:243)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readConstant(StructureParser.scala:459)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInModule(StructureParser.scala:750)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply$mcV$sp(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$readTheory$1.apply(StructureParser.scala:342)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.readTheory(StructureParser.scala:341)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.info$kwarc$mmt$api$parser$KeywordBasedParser$$readInDocument(StructureParser.scala:610)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply$mcV$sp(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser$$anonfun$apply$1.apply(StructureParser.scala:137)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.parser.Parser.logGroup(Parser.scala:141)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:136)</element>
    <element>info.kwarc.mmt.api.parser.KeywordBasedParser.apply(StructureParser.scala:128)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:44)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/logics/syntax?PowerSorts?in?type:  |- {S}exp S→exp ℘S→o INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/logics/syntax?PowerSorts?subset?type:  |- {S}exp ℘S→exp ℘S→type INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/logics/syntax?PowerSorts?subset?type:  |- {S}exp ℘S→exp ℘S→type INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/logics/syntax?PowerSorts?subset?definition:  |- [S,A,B} {x} ded x ‍∈ A → ded x ‍∈ B : (unknown [/S/0:type] {S}exp ℘S→exp ℘S→type)" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$10.apply(MMTStructureChecker.scala:183)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$10.apply(MMTStructureChecker.scala:177)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:177)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/logics/syntax?PowerSorts?ext?type:  |- {S,A,B:℘S}A⊆‍B→B⊆‍A→ded (A = = B) INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/logics/syntax?PowerSorts?ext?type:  |- {S,A,B:℘S}A⊆‍B→B⊆‍A→ded (A = = B) INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/logics/syntax?PowerSorts?ext?type:  |- {S,A,B:℘S}A⊆‍B→B⊆‍A→ded (A = = B) INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/logics/syntax?PowerSorts?ext?type:  |- {S,A,B:℘S}A⊆‍B→B⊆‍A→ded (A = = B) INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/logics/syntax?PowerSorts?ext?type:  |- {S,A,B:℘S}A⊆‍B→B⊆‍A→ded (A = = B) INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/logics/syntax?PowerSorts?ext?type:  |- {S,A,B:℘S}A⊆‍B→B⊆‍A→ded (A = = B) INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/logics/syntax?PowerSorts?ext?type:  |- {S,A,B:℘S}A⊆‍B→B⊆‍A→ded (A = = B) INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/logics/syntax?PowerSorts?compr?type:  |- {S}(exp S→o)→exp ℘S INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/logics/syntax?PowerSorts?compr_ax?type:  |- {S,P,x}(ded x)‍∈((compr S P) ⇔ (P x)) INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/logics/syntax?PowerSorts?compr_ax?type:  |- {S,P,x}(ded x)‍∈((compr S P) ⇔ (P x)) INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
<error type="info.kwarc.mmt.api.InvalidUnit" shortMsg="invalid unit: http://latin.omdoc.org/logics/syntax?PowerSorts?compr_ax?type:  |- {S,P,x}(ded x)‍∈((compr S P) ⇔ (P x)) INHABITABLE" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:61)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1$$anonfun$apply$mcV$sp$2.apply(RuleBasedChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply$mcV$sp(RuleBasedChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker$$anonfun$apply$1.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.logGroup(RuleBasedChecker.scala:15)</element>
    <element>info.kwarc.mmt.api.checking.RuleBasedChecker.apply(RuleBasedChecker.scala:52)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:158)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$8.apply(MMTStructureChecker.scala:154)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:154)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:74)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1$$anonfun$apply$mcV$sp$1.apply(MMTStructureChecker.scala:73)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply$mcV$sp(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$1.apply(MMTStructureChecker.scala:73)</element>
    <element>info.kwarc.mmt.api.frontend.Logger$class.logGroup(Log.scala:14)</element>
    <element>info.kwarc.mmt.api.checking.Checker.logGroup(Checker.scala:68)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:72)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:62)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker$$anonfun$info$kwarc$mmt$api$checking$MMTStructureChecker$$check$4.apply(MMTStructureChecker.scala:59)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.info$kwarc$mmt$api$checking$MMTStructureChecker$$check(MMTStructureChecker.scala:59)</element>
    <element>info.kwarc.mmt.api.checking.MMTStructureChecker.apply(MMTStructureChecker.scala:46)</element>
    <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:45)</element>
    <element>info.kwarc.mmt.api.checking.Interpreter.importDocument(Interpreter.scala:27)</element>
    <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
</error>
</errors>
