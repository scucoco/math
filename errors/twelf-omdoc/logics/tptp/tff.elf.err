<errors>
<error type="info.kwarc.mmt.api.frontend.Extension$LocalError" shortMsg="twelf-omdoc: unknown build error: next on empty iterator" level="2">
  <stacktrace>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:188)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
    <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
    <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
    <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
    <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
    <element>scala.Option.foreach(Option.scala:257)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
    <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
    <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
    <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
    <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
    <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
  </stacktrace>
  <cause type="java.util.NoSuchElementException" shortMsg="next on empty iterator">
    <stacktrace>
      <element>scala.collection.Iterator$$anon$2.next(Iterator.scala:39)</element>
      <element>scala.collection.Iterator$$anon$2.next(Iterator.scala:37)</element>
      <element>scala.collection.IndexedSeqLike$Elements.head(IndexedSeqLike.scala:72)</element>
      <element>scala.xml.parsing.MarkupParserCommon$class.normalizeAttributeValue(MarkupParserCommon.scala:150)</element>
      <element>scala.xml.parsing.MarkupParserCommon$class.xAttributeValue(MarkupParserCommon.scala:80)</element>
      <element>scala.xml.parsing.ConstructingParser.xAttributeValue(ConstructingParser.scala:48)</element>
      <element>scala.xml.parsing.MarkupParser$class.xAttributes(MarkupParser.scala:318)</element>
      <element>scala.xml.parsing.ConstructingParser.xAttributes(ConstructingParser.scala:48)</element>
      <element>scala.xml.parsing.MarkupParser$class.mkAttributes(MarkupParser.scala:291)</element>
      <element>scala.xml.parsing.ConstructingParser.mkAttributes(ConstructingParser.scala:48)</element>
      <element>scala.xml.parsing.ConstructingParser.mkAttributes(ConstructingParser.scala:48)</element>
      <element>scala.xml.parsing.MarkupParserCommon$class.xTag(MarkupParserCommon.scala:46)</element>
      <element>scala.xml.parsing.ConstructingParser.xTag(ConstructingParser.scala:48)</element>
      <element>scala.xml.parsing.MarkupParser$class.element1(MarkupParser.scala:575)</element>
      <element>scala.xml.parsing.ConstructingParser.element1(ConstructingParser.scala:48)</element>
      <element>scala.xml.parsing.MarkupParser$class.content1(MarkupParser.scala:433)</element>
      <element>scala.xml.parsing.ConstructingParser.content1(ConstructingParser.scala:48)</element>
      <element>scala.xml.parsing.MarkupParser$class.content(MarkupParser.scala:459)</element>
      <element>scala.xml.parsing.ConstructingParser.content(ConstructingParser.scala:48)</element>
      <element>scala.xml.parsing.MarkupParser$class.element1(MarkupParser.scala:588)</element>
      <element>scala.xml.parsing.ConstructingParser.element1(ConstructingParser.scala:48)</element>
      <element>scala.xml.parsing.MarkupParser$class.content1(MarkupParser.scala:433)</element>
      <element>scala.xml.parsing.ConstructingParser.content1(ConstructingParser.scala:48)</element>
      <element>scala.xml.parsing.MarkupParser$class.content(MarkupParser.scala:459)</element>
      <element>scala.xml.parsing.ConstructingParser.content(ConstructingParser.scala:48)</element>
      <element>scala.xml.parsing.MarkupParser$class.element1(MarkupParser.scala:588)</element>
      <element>scala.xml.parsing.ConstructingParser.element1(ConstructingParser.scala:48)</element>
      <element>scala.xml.parsing.MarkupParser$class.content1(MarkupParser.scala:433)</element>
      <element>scala.xml.parsing.ConstructingParser.content1(ConstructingParser.scala:48)</element>
      <element>scala.xml.parsing.MarkupParser$class.content(MarkupParser.scala:459)</element>
      <element>scala.xml.parsing.ConstructingParser.content(ConstructingParser.scala:48)</element>
      <element>scala.xml.parsing.MarkupParser$class.element1(MarkupParser.scala:588)</element>
      <element>scala.xml.parsing.ConstructingParser.element1(ConstructingParser.scala:48)</element>
      <element>scala.xml.parsing.MarkupParser$class.content1(MarkupParser.scala:433)</element>
      <element>scala.xml.parsing.ConstructingParser.content1(ConstructingParser.scala:48)</element>
      <element>scala.xml.parsing.MarkupParser$class.content(MarkupParser.scala:459)</element>
      <element>scala.xml.parsing.ConstructingParser.content(ConstructingParser.scala:48)</element>
      <element>scala.xml.parsing.MarkupParser$class.document(MarkupParser.scala:244)</element>
      <element>scala.xml.parsing.ConstructingParser.document(ConstructingParser.scala:48)</element>
      <element>info.kwarc.mmt.api.backend.XMLStreamer$$anonfun$apply$1.apply$mcV$sp(StreamXML.scala:67)</element>
      <element>info.kwarc.mmt.api.ErrorHandler.catchIn(Error.scala:165)</element>
      <element>info.kwarc.mmt.api.backend.XMLStreamer.apply(StreamXML.scala:66)</element>
      <element>info.kwarc.mmt.api.checking.TwoStepInterpreter.apply(Interpreter.scala:44)</element>
      <element>info.kwarc.mmt.api.frontend.Controller.read(Controller.scala:427)</element>
      <element>info.kwarc.mmt.lf.Twelf.importDocument(Twelf.scala:129)</element>
      <element>info.kwarc.mmt.api.archives.Importer.buildFile(Index.scala:39)</element>
      <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:184)</element>
      <element>info.kwarc.mmt.api.archives.TraversingBuildTarget$$anonfun$info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux$2.apply(BuildTarget.scala:171)</element>
      <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:105)</element>
      <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
      <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
      <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
      <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
      <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
      <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
      <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
      <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
      <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
      <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
      <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
      <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
      <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
      <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
      <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
      <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
      <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
      <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
      <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
      <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
      <element>info.kwarc.mmt.api.archives.WritableArchive.info$kwarc$mmt$api$archives$WritableArchive$$recurse$1(Archive.scala:93)</element>
      <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
      <element>info.kwarc.mmt.api.archives.WritableArchive$$anonfun$5.apply(Archive.scala:98)</element>
      <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
      <element>scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:252)</element>
      <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
      <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
      <element>scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:252)</element>
      <element>scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)</element>
      <element>info.kwarc.mmt.api.archives.WritableArchive.traverse(Archive.scala:98)</element>
      <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.info$kwarc$mmt$api$archives$TraversingBuildTarget$$buildAux(BuildTarget.scala:171)</element>
      <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:159)</element>
      <element>info.kwarc.mmt.api.archives.TraversingBuildTarget.build(BuildTarget.scala:157)</element>
      <element>info.kwarc.mmt.api.archives.BuildTarget.apply(BuildTarget.scala:57)</element>
      <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:521)</element>
      <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$5.apply(Controller.scala:495)</element>
      <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
      <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:495)</element>
      <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
      <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$16.apply(Controller.scala:615)</element>
      <element>scala.collection.immutable.List.foreach(List.scala:381)</element>
      <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:615)</element>
      <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:595)</element>
      <element>info.kwarc.mmt.api.frontend.Controller$$anonfun$handle$15.apply(Controller.scala:594)</element>
      <element>scala.Option.foreach(Option.scala:257)</element>
      <element>info.kwarc.mmt.api.frontend.Controller.handle(Controller.scala:594)</element>
      <element>info.kwarc.mmt.api.frontend.Controller.handleLine(Controller.scala:458)</element>
      <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
      <element>info.kwarc.mmt.api.frontend.Shell$$anonfun$main$1.apply(Shell.scala:79)</element>
      <element>scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)</element>
      <element>scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)</element>
      <element>info.kwarc.mmt.api.frontend.Shell.main(Shell.scala:79)</element>
      <element>info.kwarc.mmt.api.frontend.Run.main(Shell.scala)</element>
    </stacktrace>
  </cause>
</error>
</errors>
